version: "3.9"

services:

# mariadb service :
  mariadb:
    container_name: mariadb
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    volumes:
      - mariadb-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - wordpress-network
    restart: always



# wordpress service :
  wordpress:
    container_name: wordpress
    image: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_USER: ${MARIADB_USER}
      WORDPRESS_DB_PASSWORD: ${MARIADB_PASSWORD}
      WORDPRESS_DB_NAME: ${MARIADB_DATABASE}
    volumes:
      - wordpress-data:/var/www/html
    networks:
      - wordpress-network
    depends_on:
      - mariadb
    restart: always

# nginx service :
  nginx:
    container_name: nginx
    image: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
      - "8080:80"
    networks:
      - wordpress-network
    volumes:
      - wordpress-data:/var/www/html
    depends_on:
      - wordpress
    restart: always




# redis service :
  redis:
    container_name: redis
    image: redis
    build: 
      context: ./requirements/bonus/redis
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    networks:
      - wordpress-network
    restart: always
    depends_on:
      - mariadb

# ftp service :
  ftp:
    container_name: ftp
    image: ftp
    build:
      context: ./requirements/bonus/ftp
      dockerfile: Dockerfile
    volumes:
      - wordpress-data:/var/ftp
      - wordpress-data:/var/www/html
    ports:
      - "21:21"
      - "10000-10100:10000-10100"
    networks:
      - wordpress-network
    restart: always
    depends_on:
      - mariadb
      - wordpress

# phpmyadmin service :
  adminer:
    container_name: adminer
    image: adminer
    build:
      context: ./requirements/bonus/adminer
      dockerfile: Dockerfile
    ports:
      - "1010:8080"
    networks:
      - wordpress-network
    volumes:
      - adminer_data:/var/www/html
    restart: always
    depends_on:
      - mariadb
      - wordpress
  
# Add Portainer service here
  portainer:
    container_name: portainer
    image: portainer
    build:
      context: ./requirements/bonus/portainer
      dockerfile: Dockerfile
    restart: always
    ports:
      - "2020:9000"  # Expose the Portainer UI on port 9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Allow Portainer to interact with Docker
      - portainer_data:/data  # Store Portainer's data persistently
    networks:
      - wordpress-network  # Attach Portainer to the same network
    depends_on:
      - mariadb  # Ensure Portainer is started after MariaDB (optional)

# website
  website:
    container_name: website
    image: website
    build:
      context: ./requirements/bonus/website
      dockerfile: Dockerfile
    ports:
      - "3030:9090"
    networks:
      - wordpress-network
    volumes:
      - wordpress-data:/var/www/html
    restart: "always"
    depends_on:
      - nginx

volumes:
  mariadb-data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /home/aghounam/data/mariadb
    #   o: bind
  wordpress-data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /home/aghounam/data/wordpress
    #   o: bind
  portainer_data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /home/aghounam/data/portainer
    #   o: bind
  adminer_data:
    # driver: local
    # driver_opts:
    #   type: none
    #   device: /home/aghounam/data/adminer
    #   o: bind



networks:
  wordpress-network:
    driver: bridge

